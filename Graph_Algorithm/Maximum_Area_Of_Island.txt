 vector<pair<int,int>>disp{{1,0},{0,1},{-1,0},{0,-1}};
    bool isValid(int x,int y,int m,int n)
    {
        return x>=0 && x<m && y>=0 && y<n;
    }
    int bfs(vector<vector<int>>& grid,vector<vector<int>>& vis,int i,int j)
    {   int curmx=0;
        int x,y;
        queue<pair<int,int>>qu;
        pair<int,int>p;
        qu.push({i,j});
        curmx++;
        vis[i][j]=1;
        while(!qu.empty())
        {   p=qu.front();
            for(pair<int,int>ds : disp)
            {
                x=p.first+ds.first;
                y=p.second+ds.second;
                if(isValid(x,y,grid.size(),grid[0].size()) && grid[x][y]==1 && vis[x][y]==0)
                {   vis[x][y]=1;
                    qu.push({x,y});
                    curmx++;
                }
                
            }
         qu.pop();
         
        }
     return curmx;
    }
    
    
    
    int maxAreaOfIsland(vector<vector<int>>& grid) {
     vector<vector<int>>vis(grid.size(),vector<int>(grid[0].size(),0));
     int ans=0;
     int i,j;
     for(i=0;i<grid.size();i++)
     {
         for(j=0;j<grid[0].size();j++)
         {
             if(grid[i][j]==1 && vis[i][j]==0)
             {
                 ans=max(ans,bfs(grid,vis,i,j));
             }
         }
     }
    return ans;
        
        
    }
};