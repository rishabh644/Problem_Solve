queue<pair<pair<int,int>,int>>q;
    
    int m=grid.size();
    int n=grid[0].size();
    int i,j,del=0;;
    int ans=0;
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            if(grid[i][j]==2)
            {
                q.push({ {i,j},0 });
            }
        }
    }
    while(!q.empty())
    {
        pair<int,int>p;
        tie(p,del)=q.front();
        q.pop();
        ans=max(ans,del);
        tie(i,j)=p;
        if(i-1>=0 && grid[i-1][j]==1)
        {   grid[i-1][j]=2;
            q.push({{i-1,j},del+1});
        }
        if(i+1<m && grid[i+1][j]==1)
        {   grid[i+1][j]=2;
            q.push({{i+1,j},del+1});
        }
        if(j-1>=0 && grid[i][j-1]==1)
        {  grid[i][j-1]=2;
            q.push({{i,j-1},del+1});
        }
        if(j+1<n && grid[i][j+1]==1)
        {   grid[i][j+1]=2;
            q.push({{i,j+1},del+1});
        }
        
    }
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            if(grid[i][j]==1)
            {
                return -1;
            }
        }
    } 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    return ans;
    
    
    