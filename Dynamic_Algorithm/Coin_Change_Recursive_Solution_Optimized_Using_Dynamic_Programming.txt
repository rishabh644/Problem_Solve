 long long int CoinChange(int S[],int m,int n,vector<vector<long long int>>&vec)
    {
        if(vec[m][n]==-1)
        { long long int ans;
            if(n==0)
            ans=1;
            else if(m==0)
            ans=0;
            else if(S[m-1]<=n)
            {
                ans=CoinChange(S,m,n-S[m-1],vec)+CoinChange(S,m-1,n,vec);
            }
            else
            {
               ans=CoinChange(S,m-1,n,vec); 
            }
            vec[m][n]=ans;
        }
        return vec[m][n];
    }
    long long int count(int S[], int m, int n) {

        // code here.
        
        vector<vector<long long int>>vec(m+1,vector<long long int>(n+1,-1));
        return CoinChange(S,m,n,vec);
        
       /* if(n==0)
        return 1;
        else if(n<0)
        return 0;
        else if(m<=0)
        return 0;
        else 
        {
            int i;
            long long int sum=0;
        
            
                sum+=count(S,m,n-S[m-1])+count(S,m-1,n);
            
            return sum;
        }
        */
    }