    int max(int A[],int N)
    {
        int maxx=INT_MIN;
        for(int i=0;i<N;i++)
        {
            if(A[i]>maxx)
            maxx=A[i];
        }
        return maxx;
    }
    int sum(int A[],int N)
    {
        int summ=0;
        for(int i=0;i<N;i++)
        {
            summ+=A[i];
        }
        return summ;
    }
    bool isPossible(int A[],int N,int M,int mid)
    {
        int numofstudent=1;
        int sum=A[0];
        int i;
        for(i=1;i<N;i++)
        {
            if((sum+A[i])<=mid)
            {
                sum+=A[i];
            }
            else
            {
                numofstudent++;
                sum=A[i];
            }
            
        }
        if(numofstudent<=M)
        return 1;
        else
        return 0;
    }
    int findPages(int A[], int N, int M) 
    {
        //code here
        if(M>N)
        return -1;
        
        
        int min=max(A,N);
        int max=sum(A,N);
        int ans,mid;
        while(min<=max)
        {
            mid=(min+max)/2;
            if(isPossible(A,N,M,mid))
            {   ans=mid;
                max=mid-1;
            }
            else
            {
                min=mid+1;
            }
        }
        return ans;
    }