class Solution {
public:
    void permutation(vector<vector<int>>&ans,vector<int>&nums,int i,vector<int>&vec)
    {   unordered_map<int,bool>vis;
        if(i==nums.size())
        {
            ans.push_back(vec);
            return;
        }
        for(int j=i;j<nums.size();j++)
        {
            if(!vis[nums[j]])
            {   vis[nums[j]]=true;
                swap(nums[i],nums[j]);
                vec.push_back(nums[i]);
                permutation(ans,nums,i+1,vec);
                vec.pop_back();
                swap(nums[i],nums[j]);
            }
        }
    }
    vector<vector<int>> permuteUnique(vector<int>& nums)
    {
        
        vector<vector<int>>ans;
        vector<int>v;
        if(nums.size()==1)
        {
            v.push_back(nums[0]);
            ans.push_back(v);
            return ans;
            
        }
        permutation(ans,nums,0,v);
        return ans;
   
    
    
    }
};